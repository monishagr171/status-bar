{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Upload,CheckCircle,Activity}from\"lucide-react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProgressBar=_ref=>{let{percentage=0,type=\"upload\",label=\"\",backgroundColor=\"#e5e7eb\",fillColor=\"#3b82f6\",showIcon=true,size=\"medium\"}=_ref;const[displayPercentage,setDisplayPercentage]=useState(0);const[isAnimating,setIsAnimating]=useState(false);useEffect(()=>{const roundedPercentage=Math.round(percentage);// ðŸ”§ round to whole number\nif(displayPercentage!==roundedPercentage){setIsAnimating(true);const timer=setTimeout(()=>{setDisplayPercentage(roundedPercentage);setTimeout(()=>setIsAnimating(false),300);},50);return()=>clearTimeout(timer);}},[percentage,displayPercentage]);const getIcon=()=>{if(!showIcon)return null;switch(type){case\"upload\":return/*#__PURE__*/_jsx(Upload,{className:\"progress-icon\"});case\"processing\":return/*#__PURE__*/_jsx(Activity,{className:`progress-icon ${isAnimating?\"spinning\":\"\"}`});case\"task\":return displayPercentage===100?/*#__PURE__*/_jsx(CheckCircle,{className:\"progress-icon completed\"}):/*#__PURE__*/_jsx(Activity,{className:\"progress-icon\"});default:return/*#__PURE__*/_jsx(Activity,{className:\"progress-icon\"});}};const getStatusText=()=>{if(displayPercentage===100){switch(type){case\"upload\":return\"Upload Complete\";case\"processing\":return\"Processing Complete\";case\"task\":return\"Task Completed\";default:return\"Complete\";}}switch(type){case\"upload\":return\"Uploading...\";case\"processing\":return\"Processing...\";case\"task\":return\"In Progress...\";default:return\"Loading...\";}};const sizeClasses={small:\"progress-container-small\",medium:\"progress-container-medium\",large:\"progress-container-large\"};return/*#__PURE__*/_jsxs(\"div\",{className:`progress-wrapper ${sizeClasses[size]}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-info\",children:[getIcon(),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-text\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-label\",children:label||getStatusText()}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-status\",children:[displayPercentage,\"% complete\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:`progress-percentage ${displayPercentage===100?\"completed\":\"\"}`,children:[displayPercentage,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar-container\",style:{backgroundColor},role:\"progressbar\",\"aria-valuenow\":displayPercentage,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",\"aria-label\":`${label||getStatusText()} - ${displayPercentage}% complete`,children:[/*#__PURE__*/_jsx(\"div\",{className:`progress-bar-fill ${displayPercentage===100?\"completed\":\"\"}`,style:{width:`${displayPercentage}%`,backgroundColor:displayPercentage===100?\"#10b981\":fillColor},children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-shine\"})}),displayPercentage>0&&displayPercentage<100&&/*#__PURE__*/_jsxs(\"div\",{className:\"progress-particles\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"particle particle-1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"particle particle-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"particle particle-3\"})]})]}),displayPercentage===100&&/*#__PURE__*/_jsxs(\"div\",{className:\"success-message\",children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"success-icon\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Successfully completed!\"})]})]});};const ProgressBarDemo=()=>{const[uploadProgress,setUploadProgress]=useState(45);const[processingProgress,setProcessingProgress]=useState(78);const[taskProgress,setTaskProgress]=useState(100);const simulateProgress=function(setter){let max=arguments.length>1&&arguments[1]!==undefined?arguments[1]:100;setter(0);const interval=setInterval(()=>{setter(prev=>{const next=Math.round(prev+Math.random()*15);// ðŸ”§ round to whole number\nif(next>=max){clearInterval(interval);return max;}return next;});},200);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-wrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Advanced Progress Bar Component\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-demo\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"File Upload Progress\"}),/*#__PURE__*/_jsx(ProgressBar,{percentage:uploadProgress,type:\"upload\",label:\"Uploading documents.zip\",size:\"large\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>simulateProgress(setUploadProgress),children:\"Start Upload\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-demo\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Data Processing\"}),/*#__PURE__*/_jsx(ProgressBar,{percentage:processingProgress,type:\"processing\",label:\"Processing customer data\",fillColor:\"#8b5cf6\",size:\"medium\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>simulateProgress(setProcessingProgress),children:\"Start Processing\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-demo\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Task Completion\"}),/*#__PURE__*/_jsx(ProgressBar,{percentage:taskProgress,type:\"task\",label:\"Completing project setup\",fillColor:\"#f59e0b\",size:\"small\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>simulateProgress(setTaskProgress),children:\"Start Task\"})]})]});};export default ProgressBarDemo;","map":{"version":3,"names":["React","useState","useEffect","Upload","CheckCircle","Activity","jsx","_jsx","jsxs","_jsxs","ProgressBar","_ref","percentage","type","label","backgroundColor","fillColor","showIcon","size","displayPercentage","setDisplayPercentage","isAnimating","setIsAnimating","roundedPercentage","Math","round","timer","setTimeout","clearTimeout","getIcon","className","getStatusText","sizeClasses","small","medium","large","children","style","role","width","ProgressBarDemo","uploadProgress","setUploadProgress","processingProgress","setProcessingProgress","taskProgress","setTaskProgress","simulateProgress","setter","max","arguments","length","undefined","interval","setInterval","prev","next","random","clearInterval","onClick"],"sources":["/Users/monishagr/Desktop/react/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Upload, CheckCircle, Activity } from \"lucide-react\";\nimport \"./App.css\";\n\nconst ProgressBar = ({\n  percentage = 0,\n  type = \"upload\",\n  label = \"\",\n  backgroundColor = \"#e5e7eb\",\n  fillColor = \"#3b82f6\",\n  showIcon = true,\n  size = \"medium\",\n}) => {\n  const [displayPercentage, setDisplayPercentage] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  useEffect(() => {\n    const roundedPercentage = Math.round(percentage); // ðŸ”§ round to whole number\n    if (displayPercentage !== roundedPercentage) {\n      setIsAnimating(true);\n      const timer = setTimeout(() => {\n        setDisplayPercentage(roundedPercentage);\n        setTimeout(() => setIsAnimating(false), 300);\n      }, 50);\n      return () => clearTimeout(timer);\n    }\n  }, [percentage, displayPercentage]);\n\n  const getIcon = () => {\n    if (!showIcon) return null;\n    switch (type) {\n      case \"upload\":\n        return <Upload className=\"progress-icon\" />;\n      case \"processing\":\n        return (\n          <Activity\n            className={`progress-icon ${isAnimating ? \"spinning\" : \"\"}`}\n          />\n        );\n      case \"task\":\n        return displayPercentage === 100 ? (\n          <CheckCircle className=\"progress-icon completed\" />\n        ) : (\n          <Activity className=\"progress-icon\" />\n        );\n      default:\n        return <Activity className=\"progress-icon\" />;\n    }\n  };\n\n  const getStatusText = () => {\n    if (displayPercentage === 100) {\n      switch (type) {\n        case \"upload\":\n          return \"Upload Complete\";\n        case \"processing\":\n          return \"Processing Complete\";\n        case \"task\":\n          return \"Task Completed\";\n        default:\n          return \"Complete\";\n      }\n    }\n    switch (type) {\n      case \"upload\":\n        return \"Uploading...\";\n      case \"processing\":\n        return \"Processing...\";\n      case \"task\":\n        return \"In Progress...\";\n      default:\n        return \"Loading...\";\n    }\n  };\n\n  const sizeClasses = {\n    small: \"progress-container-small\",\n    medium: \"progress-container-medium\",\n    large: \"progress-container-large\",\n  };\n\n  return (\n    <div className={`progress-wrapper ${sizeClasses[size]}`}>\n      <div className=\"progress-header\">\n        <div className=\"progress-info\">\n          {getIcon()}\n          <div className=\"progress-text\">\n            <div className=\"progress-label\">{label || getStatusText()}</div>\n            <div className=\"progress-status\">{displayPercentage}% complete</div>\n          </div>\n        </div>\n        <div\n          className={`progress-percentage ${\n            displayPercentage === 100 ? \"completed\" : \"\"\n          }`}\n        >\n          {displayPercentage}%\n        </div>\n      </div>\n\n      <div\n        className=\"progress-bar-container\"\n        style={{ backgroundColor }}\n        role=\"progressbar\"\n        aria-valuenow={displayPercentage}\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-label={`${\n          label || getStatusText()\n        } - ${displayPercentage}% complete`}\n      >\n        <div\n          className={`progress-bar-fill ${\n            displayPercentage === 100 ? \"completed\" : \"\"\n          }`}\n          style={{\n            width: `${displayPercentage}%`,\n            backgroundColor: displayPercentage === 100 ? \"#10b981\" : fillColor,\n          }}\n        >\n          <div className=\"progress-bar-shine\"></div>\n        </div>\n\n        {displayPercentage > 0 && displayPercentage < 100 && (\n          <div className=\"progress-particles\">\n            <div className=\"particle particle-1\"></div>\n            <div className=\"particle particle-2\"></div>\n            <div className=\"particle particle-3\"></div>\n          </div>\n        )}\n      </div>\n\n      {displayPercentage === 100 && (\n        <div className=\"success-message\">\n          <CheckCircle className=\"success-icon\" />\n          <span>Successfully completed!</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ProgressBarDemo = () => {\n  const [uploadProgress, setUploadProgress] = useState(45);\n  const [processingProgress, setProcessingProgress] = useState(78);\n  const [taskProgress, setTaskProgress] = useState(100);\n\n  const simulateProgress = (setter, max = 100) => {\n    setter(0);\n    const interval = setInterval(() => {\n      setter((prev) => {\n        const next = Math.round(prev + Math.random() * 15); // ðŸ”§ round to whole number\n        if (next >= max) {\n          clearInterval(interval);\n          return max;\n        }\n        return next;\n      });\n    }, 200);\n  };\n\n  return (\n    <div className=\"app-wrapper\">\n      <h1>Advanced Progress Bar Component</h1>\n\n      <div className=\"progress-demo\">\n        <h2>File Upload Progress</h2>\n        <ProgressBar\n          percentage={uploadProgress}\n          type=\"upload\"\n          label=\"Uploading documents.zip\"\n          size=\"large\"\n        />\n        <button onClick={() => simulateProgress(setUploadProgress)}>\n          Start Upload\n        </button>\n      </div>\n\n      <div className=\"progress-demo\">\n        <h2>Data Processing</h2>\n        <ProgressBar\n          percentage={processingProgress}\n          type=\"processing\"\n          label=\"Processing customer data\"\n          fillColor=\"#8b5cf6\"\n          size=\"medium\"\n        />\n        <button onClick={() => simulateProgress(setProcessingProgress)}>\n          Start Processing\n        </button>\n      </div>\n\n      <div className=\"progress-demo\">\n        <h2>Task Completion</h2>\n        <ProgressBar\n          percentage={taskProgress}\n          type=\"task\"\n          label=\"Completing project setup\"\n          fillColor=\"#f59e0b\"\n          size=\"small\"\n        />\n        <button onClick={() => simulateProgress(setTaskProgress)}>\n          Start Task\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBarDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}